<script>
	/* appel à la méthode ajax qui va mettre en place le transfert de données vers la base de données 
			 */

// charger la page avant d'exécuter la méthode ajax
window.addEventListener("load", () => { // il prend l'élément de l'id ci-dessous cité et il applique l'événement "on" sur le boutton submit de cet élément
$("#form-search").on("submit", (evtSubmit) => { // cette méthode nous permet de ne pas applique le comportement habituel du bouton submit
evtSubmit.preventDefault();
// on applique la méthode ajax pour ce faire il faut des recettes
// url pour: envoyer la requête vers le serveur
// method "POST" est utilisée dans notre requête pour envoyer des données( si on ne précise pas c'est "GET" par défault)
// data: ce sont les données des champs du formulaire dans notre cas un seul champ avec le nom suivant : "commentaire[message]"
// datatype: retourne la réponse en format json
$.ajax({
url: "{{ path('app_annonces_recherche') }}",
data: "search=" + $("#form-search [name='search']").val(),
dataType: "html",
// success est une méthode de ajax qui permet de récupérer les données envoyés du serveur dans notre cas les données reçues sont inclues "getData"
success: (getData) => {
// on élimine la class "d-none" dans l'élément html contenant id="card-comment"
// $("#card-comment").removeClass("d-none");
// on affiche getData soit les données récupérées du serveur dans l'élément html contenant id="comment"
$("#main").html(getData);
},
// en cas d'erreur, la méthode ajax "error" met en place le message d'erreur cité ci-dessous dans la console du navigateur
error: (jqXHR, status, error) => {
console.log("ERREUR AJAX", status, error);
}
});
});
});

</script>
